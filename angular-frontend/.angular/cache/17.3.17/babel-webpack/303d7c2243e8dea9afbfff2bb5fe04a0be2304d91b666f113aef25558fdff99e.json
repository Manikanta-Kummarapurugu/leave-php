{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/employee.service\";\nimport * as i3 from \"../../../services/company.service\";\nimport * as i4 from \"../../../services/department.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction EmployeeFormComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"label\", 9);\n    i0.ɵɵtext(3, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 30);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmployeeFormComponent_option_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const company_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", company_r1.COMPANY);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", company_r1.COMPANY, \" \");\n  }\n}\nfunction EmployeeFormComponent_option_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r2.DEPTNAME);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", dept_r2.DEPTNAME, \" \");\n  }\n}\nfunction EmployeeFormComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"div\", 8)(3, \"label\", 9);\n    i0.ɵɵtext(4, \"Available Leave Days\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 32);\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let EmployeeFormComponent = /*#__PURE__*/(() => {\n  class EmployeeFormComponent {\n    constructor(formBuilder, employeeService, companyService, departmentService, router, route) {\n      this.formBuilder = formBuilder;\n      this.employeeService = employeeService;\n      this.companyService = companyService;\n      this.departmentService = departmentService;\n      this.router = router;\n      this.route = route;\n      this.companies = [];\n      this.departments = [];\n      this.isEdit = false;\n      this.employeeId = null;\n      this.loading = false;\n      this.employeeForm = this.formBuilder.group({\n        EMPNAME: ['', Validators.required],\n        EMPLOYID: ['', Validators.required],\n        USERNAME: ['', [Validators.required, Validators.email]],\n        PASSWRD: [''],\n        EMPPOSITION: ['', Validators.required],\n        EMPSEX: ['', Validators.required],\n        COMPANY: ['', Validators.required],\n        DEPARTMENT: ['', Validators.required],\n        AVELEAVE: [18]\n      });\n    }\n    ngOnInit() {\n      this.employeeId = Number(this.route.snapshot.paramMap.get('id'));\n      this.isEdit = !!this.employeeId;\n      if (!this.isEdit) {\n        this.employeeForm.get('PASSWRD')?.setValidators([Validators.required]);\n      }\n      this.loadCompanies();\n      this.loadDepartments();\n      if (this.isEdit) {\n        this.loadEmployee();\n      }\n    }\n    loadCompanies() {\n      this.companyService.getCompanies().subscribe({\n        next: companies => this.companies = companies\n      });\n    }\n    loadDepartments() {\n      this.departmentService.getDepartments().subscribe({\n        next: departments => this.departments = departments\n      });\n    }\n    loadEmployee() {\n      if (this.employeeId) {\n        this.employeeService.getEmployee(this.employeeId).subscribe({\n          next: employee => {\n            this.employeeForm.patchValue(employee);\n          }\n        });\n      }\n    }\n    onSubmit() {\n      if (this.employeeForm.valid) {\n        this.loading = true;\n        const employee = this.employeeForm.value;\n        if (this.isEdit && this.employeeId) {\n          employee.EMPID = this.employeeId;\n          this.employeeService.updateEmployee(employee).subscribe({\n            next: () => {\n              this.router.navigate(['/employees']);\n              this.loading = false;\n            },\n            error: () => this.loading = false\n          });\n        } else {\n          this.employeeService.createEmployee(employee).subscribe({\n            next: () => {\n              this.router.navigate(['/employees']);\n              this.loading = false;\n            },\n            error: () => this.loading = false\n          });\n        }\n      }\n    }\n    goBack() {\n      this.router.navigate(['/employees']);\n    }\n    static {\n      this.ɵfac = function EmployeeFormComponent_Factory(t) {\n        return new (t || EmployeeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.CompanyService), i0.ɵɵdirectiveInject(i4.DepartmentService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: EmployeeFormComponent,\n        selectors: [[\"app-employee-form\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 76,\n        vars: 8,\n        consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\", \"shadow\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"EMPNAME\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"EMPLOYID\", 1, \"form-control\"], [\"type\", \"email\", \"formControlName\", \"USERNAME\", 1, \"form-control\"], [\"class\", \"col-md-6\", 4, \"ngIf\"], [\"formControlName\", \"EMPPOSITION\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Administrator\"], [\"value\", \"Manager user\"], [\"value\", \"Supervisor user\"], [\"value\", \"Normal user\"], [\"formControlName\", \"EMPSEX\", 1, \"form-control\"], [\"value\", \"MALE\"], [\"value\", \"FEMALE\"], [\"formControlName\", \"COMPANY\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"DEPARTMENT\", 1, \"form-control\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"me-md-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"password\", \"formControlName\", \"PASSWRD\", 1, \"form-control\"], [3, \"value\"], [\"type\", \"number\", \"formControlName\", \"AVELEAVE\", 1, \"form-control\"]],\n        template: function EmployeeFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\");\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5);\n            i0.ɵɵlistener(\"ngSubmit\", function EmployeeFormComponent_Template_form_ngSubmit_7_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n            i0.ɵɵtext(12, \"Employee Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(14, \"div\", 7)(15, \"div\", 8)(16, \"label\", 9);\n            i0.ɵɵtext(17, \"Employee ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(18, \"input\", 11);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(19, \"div\", 6)(20, \"div\", 7)(21, \"div\", 8)(22, \"label\", 9);\n            i0.ɵɵtext(23, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(24, \"input\", 12);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(25, EmployeeFormComponent_div_25_Template, 5, 0, \"div\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"div\", 6)(27, \"div\", 7)(28, \"div\", 8)(29, \"label\", 9);\n            i0.ɵɵtext(30, \"Position\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"select\", 14)(32, \"option\", 15);\n            i0.ɵɵtext(33, \"Select Position\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"option\", 16);\n            i0.ɵɵtext(35, \"Administrator\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"option\", 17);\n            i0.ɵɵtext(37, \"Manager\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"option\", 18);\n            i0.ɵɵtext(39, \"Supervisor\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(40, \"option\", 19);\n            i0.ɵɵtext(41, \"Normal User\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(42, \"div\", 7)(43, \"div\", 8)(44, \"label\", 9);\n            i0.ɵɵtext(45, \"Gender\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(46, \"select\", 20)(47, \"option\", 15);\n            i0.ɵɵtext(48, \"Select Gender\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(49, \"option\", 21);\n            i0.ɵɵtext(50, \"Male\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(51, \"option\", 22);\n            i0.ɵɵtext(52, \"Female\");\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(53, \"div\", 6)(54, \"div\", 7)(55, \"div\", 8)(56, \"label\", 9);\n            i0.ɵɵtext(57, \"Company\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(58, \"select\", 23)(59, \"option\", 15);\n            i0.ɵɵtext(60, \"Select Company\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(61, EmployeeFormComponent_option_61_Template, 2, 2, \"option\", 24);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(62, \"div\", 7)(63, \"div\", 8)(64, \"label\", 9);\n            i0.ɵɵtext(65, \"Department\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(66, \"select\", 25)(67, \"option\", 15);\n            i0.ɵɵtext(68, \"Select Department\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(69, EmployeeFormComponent_option_69_Template, 2, 2, \"option\", 24);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(70, EmployeeFormComponent_div_70_Template, 6, 0, \"div\", 26);\n            i0.ɵɵelementStart(71, \"div\", 27)(72, \"button\", 28);\n            i0.ɵɵlistener(\"click\", function EmployeeFormComponent_Template_button_click_72_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵtext(73, \" Cancel \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(74, \"button\", 29);\n            i0.ɵɵtext(75);\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(ctx.isEdit ? \"Edit Employee\" : \"Add Employee\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n            i0.ɵɵadvance(18);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isEdit);\n            i0.ɵɵadvance(36);\n            i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isEdit);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid || ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Saving...\" : ctx.isEdit ? \"Update\" : \"Create\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i6.NgForOf, i6.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return EmployeeFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}