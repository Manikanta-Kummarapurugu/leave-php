{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/department.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DepartmentListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function DepartmentListComponent_tr_20_Template_button_click_8_listener() {\n      const department_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editDepartment(department_r2));\n    });\n    i0.ɵɵtext(9, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function DepartmentListComponent_tr_20_Template_button_click_10_listener() {\n      const department_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteDepartment(department_r2.DEPTID));\n    });\n    i0.ɵɵtext(11, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const department_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r2.DEPTID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r2.DEPTNAME);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r2.DEPTSHORTNAME);\n  }\n}\nfunction DepartmentListComponent_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function DepartmentListComponent_button_39_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cancelEdit());\n    });\n    i0.ɵɵtext(1, \" Cancel \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let DepartmentListComponent = /*#__PURE__*/(() => {\n  class DepartmentListComponent {\n    constructor(departmentService, formBuilder) {\n      this.departmentService = departmentService;\n      this.formBuilder = formBuilder;\n      this.departments = [];\n      this.isEdit = false;\n      this.editingId = null;\n      this.loading = false;\n      this.departmentForm = this.formBuilder.group({\n        DEPTNAME: ['', Validators.required],\n        DEPTSHORTNAME: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadDepartments();\n    }\n    loadDepartments() {\n      this.departmentService.getDepartments().subscribe({\n        next: departments => this.departments = departments\n      });\n    }\n    onSubmit() {\n      if (this.departmentForm.valid) {\n        this.loading = true;\n        const department = this.departmentForm.value;\n        if (this.isEdit && this.editingId) {\n          department.DEPTID = this.editingId;\n          this.departmentService.updateDepartment(department).subscribe({\n            next: () => {\n              this.loadDepartments();\n              this.resetForm();\n              this.loading = false;\n            },\n            error: () => this.loading = false\n          });\n        } else {\n          this.departmentService.createDepartment(department).subscribe({\n            next: () => {\n              this.loadDepartments();\n              this.resetForm();\n              this.loading = false;\n            },\n            error: () => this.loading = false\n          });\n        }\n      }\n    }\n    editDepartment(department) {\n      this.isEdit = true;\n      this.editingId = department.DEPTID;\n      this.departmentForm.patchValue(department);\n    }\n    cancelEdit() {\n      this.resetForm();\n    }\n    resetForm() {\n      this.departmentForm.reset();\n      this.isEdit = false;\n      this.editingId = null;\n    }\n    deleteDepartment(id) {\n      if (confirm('Are you sure you want to delete this department?')) {\n        this.departmentService.deleteDepartment(id).subscribe({\n          next: () => this.loadDepartments()\n        });\n      }\n    }\n    static {\n      this.ɵfac = function DepartmentListComponent_Factory(t) {\n        return new (t || DepartmentListComponent)(i0.ɵɵdirectiveInject(i1.DepartmentService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DepartmentListComponent,\n        selectors: [[\"app-department-list\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 40,\n        vars: 6,\n        consts: [[1, \"row\"], [1, \"col-md-8\"], [1, \"card\", \"shadow\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"DEPTNAME\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"DEPTSHORTNAME\", 1, \"form-control\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", \"class\", \"btn btn-secondary mt-2\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"]],\n        template: function DepartmentListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\");\n            i0.ɵɵtext(5, \"Departments\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"table\", 6)(9, \"thead\")(10, \"tr\")(11, \"th\");\n            i0.ɵɵtext(12, \"ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"th\");\n            i0.ɵɵtext(14, \"Department Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"th\");\n            i0.ɵɵtext(16, \"Short Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"th\");\n            i0.ɵɵtext(18, \"Actions\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(19, \"tbody\");\n            i0.ɵɵtemplate(20, DepartmentListComponent_tr_20_Template, 12, 3, \"tr\", 7);\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(21, \"div\", 8)(22, \"div\", 2)(23, \"div\", 3)(24, \"h4\");\n            i0.ɵɵtext(25);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(26, \"div\", 4)(27, \"form\", 9);\n            i0.ɵɵlistener(\"ngSubmit\", function DepartmentListComponent_Template_form_ngSubmit_27_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(28, \"div\", 10)(29, \"label\", 11);\n            i0.ɵɵtext(30, \"Department Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(31, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 10)(33, \"label\", 11);\n            i0.ɵɵtext(34, \"Short Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(35, \"input\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"div\", 14)(37, \"button\", 15);\n            i0.ɵɵtext(38);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(39, DepartmentListComponent_button_39_Template, 2, 0, \"button\", 16);\n            i0.ɵɵelementEnd()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(20);\n            i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(ctx.isEdit ? \"Edit Department\" : \"Add Department\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.departmentForm);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"disabled\", !ctx.departmentForm.valid || ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Saving...\" : ctx.isEdit ? \"Update\" : \"Add\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isEdit);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return DepartmentListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}