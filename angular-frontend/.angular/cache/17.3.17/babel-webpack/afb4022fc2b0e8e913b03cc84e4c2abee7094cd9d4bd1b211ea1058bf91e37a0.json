{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, authService, router) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.router = router;\n      this.loading = false;\n      this.error = '';\n      this.loginForm = this.formBuilder.group({\n        username: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        this.error = '';\n        this.authService.login(this.loginForm.value).subscribe({\n          next: response => {\n            if (response.success) {\n              this.router.navigate(['/dashboard']);\n            } else {\n              this.error = response.message;\n            }\n            this.loading = false;\n          },\n          error: error => {\n            this.error = 'Login failed. Please try again.';\n            this.loading = false;\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 21,\n        vars: 4,\n        consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-5\"], [1, \"card\", \"shadow-lg\", \"border-0\", \"rounded-lg\", \"mt-5\"], [1, \"card-header\"], [1, \"text-center\", \"font-weight-light\", \"my-4\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-floating\", \"mb-3\"], [\"formControlName\", \"username\", \"type\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\"], [\"for\", \"username\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"for\", \"password\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n            i0.ɵɵtext(6, \"Login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(9, \"div\", 8);\n            i0.ɵɵelement(10, \"input\", 9);\n            i0.ɵɵelementStart(11, \"label\", 10);\n            i0.ɵɵtext(12, \"Email address\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 8);\n            i0.ɵɵelement(14, \"input\", 11);\n            i0.ɵɵelementStart(15, \"label\", 12);\n            i0.ɵɵtext(16, \"Password\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 13)(18, \"button\", 14);\n            i0.ɵɵtext(19);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 1, \"div\", 15);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid || ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Signing in...\" : \"Sign in\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}